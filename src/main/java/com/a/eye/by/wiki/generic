一、概念：
1、泛型是参数化类型，使用广泛的类型。
2、起因：数据类型不明确，装入的类型被当做Object对待，从而”丢失”自己的实际类型。获取数据的时候往往需要转型，效率低，容易产生错误。
3、作用：3.1安全，在编译的时候检查类型安全。3.2省心，所有强制类型转换都是自动和隐式的，提高代码的重用率。
二、定义：
class 类名 <字母列表> {
	修饰符 字母 属性
	修饰符 构造器{
	}
	修饰符 返回类型 方法(){
	}
}
泛型常见的字母列表：
T type 表示类型
K V 分别表示键中的key 和 value的值。
E 代表Element
？ 代表不确定的类型
三、泛型使用需注意问题：
1、不能用在静态属性、静态方法上
2、泛型使用不能指定基本类型
3、接口中泛型只能使用在接口方法中，不能使用在全局变量中






