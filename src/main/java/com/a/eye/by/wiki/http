一、HTTP协议特点：
1、支持客户端和服务端
2、简单：客户向服务器发送请求时，只需要传送请求方法和路径。
3、灵活：HTTP允许传输任意类型的数据对象
4、无连接：无连接限制每次连接只处理一次请求。服务器处理完客户的请求后，并收到客户的应答后，立即断开连接，采用这种方式节省时间
5、无状态：HTTP协议时无状态的，对于事务处理没有记忆能力，缺少状态意味着如果后续处理需要前面的信息，则必须重传
二、Cookie和Session
1、Cookie数据存放到客户端的浏览器上，sessions数据存放在服务器上。
2、cookie不是很安全，别人可以分析本地的cookie并进行cookie欺骗。
3、单个cookie保存的数据不能超过4k，很多浏览器限制一个站点最多保存20个cookie
4、Cookie 客户端需要每次将Cookie的值传送给服务端，如果Cookie的值很大，无形中增加了客户端与服务端数据传输的数量
5、Session 同一个客户端和服务端交互，不需要每次都回传所有的cookie值，而是只需要传递一个JssionId
三、HTTP介绍
1、大多数传统的c/s互联网应用采用长连接方式
2、http采用无状态的端连接，采用这种方式的目的是未来同时服务更多的用户。
3、互联网所有的资源都需要用一个URL标识，URL是统一资源定位符
4、发起一个HTTP请求就是建立一个Socket的过程。
5、Http Header是控制着互联网用户数据的传输，控制着浏览器的渲染行为和服务器的执行逻辑。
6、http请求头，包括accept-charset 指定客户端接受的字符集。Accept-Encoding 用于接受可接受的内容编码。Accept-Language，
用于指定一种自然语言。
四、DNS
1、将域名解析成IP
2、DNS解析过程
2.1 检查缓存中是否有域名对应的IP，如果有直接使用，缓存大小，缓存时间都有限制。缓存时间太长一旦域名对应的IP有变化，这段时间会有部分用户无法访问。
时间太短，每次访问都需要重新解析。
2.2 如果浏览器没有缓存，操作系统也可以存储。windows在host中存储，linux在etc/host中存储。
3、几种域名解析方式
3.1：A记录，A代表Address，用来指定域名对应的IP地址。A记录可以将多个域名解析到一个IP地址。但是不能将多个域名解析到多个IP地址。
3.2：CNAME记录，全称（别名解析），所谓的别名解析就是将一个域名设置一个或者多个别名。

五、Http和Https的区别
1、Https即Secure Hypertext Transfer Protocol，即安全超文本传输协议，它是一个安全通信信道，基于Http开发，用于在客户机和服务器间交换信息。它使用安全套接字层SSL进行信息交换，是Http的安全版。
2、Https协议需要到CA申请证书，一般免费证书很少，需要交费。
3、Http是超文本传输协议，信息是明文传输，https则是具有安全性的tls/ssl加密传输协议。
4、http是80端口，https是443端口

六、浏览器输入一个URL的过程
1、浏览器向DNS服务器请求解析该URL中的域名所对应的IP地址
2、解析出IP地址后，根据IP地址和默认端口80和服务器建立TCP连接
3、浏览器发出Http请求，该请求报文作为TCP三次握手的第三个报文的数据发送给服务器
4、服务器做出响应，把对应的请求资源发送给浏览器
5、释放TCP连接
6、浏览器解析并显示内容

七、 LinuxIO模型
1、阻塞IO模型 以socket为例，在进程空间调用recvfrom，其系统调用知道数据包到达且被复制到应用进程的缓冲区或者发生错误才返回，在此期间一直等待，进程从调用recvfrom开始到它返回的整段时间内都是被阻塞的，因此称为阻塞IO
2、非阻塞IO模型 应用进程调用recvfrom，如果缓冲区没有数据直接返回EWOULDBLOCK错误。一般对非阻塞IO进行轮询，以确定是否有数据到来。
3、IO多路复用模型
Linux提供select/poll，通过将一个或多个fd传递给select或poll系统调用，阻塞在select上。select/poll顺序扫描fd是否就绪。
4、信号驱动IO
开启套接字接口信号驱动IO功能，并通过系统调用sigaction执行信号处理函数。当数据准备就绪时，为该进程生成SIGIO信号，通过信号回调通知应用程序调用recvfrom来读取数据，并通知主函数处理数据。
5、异步IO
告知内核启动某个操作，并让内核在整个操作完成后通知我们。它与信号驱动IO的区别在于信号驱动IO由内核通知我们何时可以开始IO操作。而异步IO模型由内核通知我们IO操作已经完成。







