五十七、只针对异常的情况才使用异常
1、异常应该只用于异常的情况下，它们不应该用于正常的流控制。
2、设计良好的API不应该强迫它的客户端为了正常的控制流而使用异常。

五十八、对可恢复的异常使用受检异常，对编程错误使用运行时异常
1、三种异常情况
	1、受检异常
	2、运行时异常
	3、错误
2、如果期望调用者能够适当地恢复，对于这种情况应该使用受检异常。
3、实现的所有未受检异常的抛出结构都应该是RuntimeException的子类

五十九、避免不必要的使用受检的异常
六十、优先使用标准的异常
六十一、抛出与抽象相对应的异常
更高层的实现应该捕获低层的异常，同时抛出可以按照高层抽象进行解释的异常。

六十二、每个方法抛出的异常都要有文档
六十三、在细节消息中包含能捕获失败的信息
为了捕获失败，异常的细节信息应该包含所有对该异常有贡献的参数和域的值。

六十四、努力使失败保持原子性
失败的方法调用应该使对象保持在被调用之前的状态

六十五、不要忽略异常
















