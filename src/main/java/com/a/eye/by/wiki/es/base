一、Elasticsearch简介
1、Elasticsearch是一个基于Lucene构建的开源、分布式、Restful接口全文搜索引擎。Elasticsearch还是一个分布式文档数据库，其中每个字段均
是被索引的数据且可以被搜索，可以扩展至数以百计的服务器存储以及处理PB级的数据。

二、Elasticsearch的优点
1、横向可扩展性，只需要添加一台服务器，做一点配置，启动Elasticsearch就可以并入集群
2、分片机制提供更好的分布行，同一个索引分成多个分片，分而治之的方式提升处理效率。
3、高可用：提供复制replica机制，一个分片可以设置多个复制，是得某台服务器在宕机的情况下，集群仍旧可以照常运行。
4、使用简单，只需要一条命令，就可以下周文件，很快能够搭建一个站内搜索引擎。

三、Lucene倒排索引
倒排索引源于实际应用中需要根据属性的值来查找记录。这种索引表中的每一项都包括一个属性值和具有该属性值的各记录的地址。
由于不是由记录来确定属性值，而是由属性值来确定记录的位置，因而称为倒排索引（inverted index）。
带有倒排索引的文件我们称为倒排索引文件，简称倒排文件（inverted file）

四、Elasticsearch术语及概念
1、索引词：在Elasticsearch中索引词（term）是一个能够被索引的精确值，索引词（term）是可以通过term查询进行准确的搜索。
2、文本（text）：文本是一段普通的非结构化文字。通常，文本会被分析成一个个的索引词，存储在Elasticsearch的索引库中。
3、分析（analysis）：分析是将文本转换为索引词的过程，分析的结果依赖于分词器。
4、集群（cluster）：集群由一个或多个节点组成，对外提供服务，对外提供索引和搜索功能。在所有节点，一个集群有一个唯一的名称默认为“Elasticsearch”。
此名称是很重要的，因为每个节点只能是集群的一部分，当该节点被设置为相同的集群名称时，就会自动加入集群。
5、节点（node）：一个节点是一个逻辑上独立的服务，它是集群的一部分，可以存储数据，并参与集群的索引和搜索功能。就像集群一样，节点也有唯一的名字，在启动的时候分配。
6、路由（routing）：当存储一个文档的时候，它会存储在唯一的主分片中，具体哪个分片是通过散列值进行选择。默认情况下，这个值是由文档的ID生成。
7、分片（shard）：分片是单个Lucene实例，这是Elasticsearch管理的比较底层的功能。索引是指向主分片和副本分片的逻辑空间。对于使用，只需要指定分片的数量，其他不需要做过多的事情。
8、主分片（primary shard）：每个文档都存储在一个分片中，当你存储一个文档的时候，系统会首先存储在主分片中，然后会复制到不同的副本中。
9、副本分片（replica shard）：每一个分片有零个或多个副本。副本主要是主分片的复制，其中有两个目的：
.增加高可用性：当主分片失败的时候，可以从副本分片中选择一个作为主分片。
·提高性能：当查询的时候可以到主分片或者副本分片中进行查询。默认情况下，一个主分片配有一个副本，但副本的数量可以在后面动态地配置增加。副本分片必须部署在不同的节点上，不能部署在和主分片相同的节点上
10、.复制（replica）：复制是一个非常有用的功能，不然会有单点问题。当网络中的某个节点出现问题的时候，复制可以对故障进行转移，保证系统的高可用。因此，Elasticsearch允许你创建一个或多个拷贝，你的索引分片就形成了所谓的副本或副本分片。
	它提供了高可用性，当节点失败的时候不受影响。需要注意的是，一个复制的分片不会存储在同一个节点中。
	它允许你扩展搜索量，提高并发量，因为搜索可以在所有副本上并行执行。
11、索引（index）：索引是具有相同结构的文档集合
12、类型（type）：在索引中，可以定义一个或多个类型，类型是索引的逻辑分区。
13、文档（document）：文档是存储在Elasticsearch中的一个JSON格式的字符串。它就像在关系数据库中表的一行。每个存储在索引中的一个文档都有一个类型和一个ID，每个文档都是一个JSON对象，存储了零个或者多个字段，
或者键值对。原始的JSON文档被存储在一个叫作_source的字段中。
14、映射（mapping）：映射像关系数据库中的表结构，每一个索引都有一个映射，它定义了索引中的每一个字段类型，以及一个索引范围内的设置。
15、字段（field）：文档中包含零个或者多个字段，字段可以是一个简单的值（例如字符串、整数、日期），也可以是一个数组或对象的嵌套结构。
16、来源字段（source field）：默认情况下，你的原文档将被存储在_source这个字段中，当你查询的时候也是返回这个字段。
17、主键（ID）：ID是一个文件的唯一标识，如果在存库的时候没有提供ID，系统会自动生成一个ID，文档的index/type/id必须是唯一的。
