一、Trident
Trident是一个基于Storm的用于实时计算的高级抽象原语。它支持高吞吐（每秒百万级别），有状态的流处理，并且还能够提供低延时的分布式查询功能。
如果你熟悉一些比较高级的批处理工具，比如Pig和Cascading，那么对于Trident你应该有一种似曾相识的感觉。Trident具有连接，聚合，分组，自定义行为和过滤的功能。
除此之外，Trident能够基于内存或者数据库做有状态的，增量式的计算。Trident本身能够保证每个Tuple严格只被执行一次，所以使用Trident很容易构建一个靠谱的Topology。

二、Trident容错
Trident一个比较酷的事情就是它是完全容错的，保证数据严格只被执行一次的。这使得我们很容易构建靠谱的实时计算系统。
Trident存储每个Tuple的处理状态，以便在有错误发生时，可以恢复数据并且防止一个数据被重复处理。

persistentAggregate方法会将数据流转换成TridentState对象。

三、Trident致力于提高Topology结构的性能
1、读取和写入操作会自动使用batch的方式执行，如果有20次更新需要被同步到数据库中，Trident会自动将这些操作汇总到一起，只做一次读写操作，而不是20次。因此Trident可以在方便你计算的同时提高极高的性能。
2、Trident对聚合操作做了极大的优化。Trident并不是简单地把一个Group中所有的Tuple都发送到同一个机器上进行聚合，如果条件允许，Trident在将数据通过网路发送之前已经做了部分聚合操作，
Count聚合器在每一个分区分别计算统计值，然后通过网络发送分区的计算结果，然后将所有分区的计算结果进行汇总得到总的结果。这与MapReduce的计算模型非常相似。