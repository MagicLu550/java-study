Spring通过执行器TaskExecutor来实现多线程和并发编程。
使用ThreadPoolTaskExecutor可实现一个基于线程池的TaskExecutor。
我们需要在配置类中，通过@EnableAsync开启对异步任务的支持，并通过在实际执行的Bean的方法中使用@Async注解来生命其实一个异步任务。
1、利用EnableAsync注解开启异步任务支持。
2、配置类实现AsyncConfigurer接口并重写getAsyncExecutor方法，并返回一个ThreadPoolTaskExecutor，这样就活得了一个基于
线程池的TaskExecutor。
3、通过@Async注解表明该方法是一个异步方法。如果注解在类级别，则表明该类所有的方法都是异步方法，而这里的方法被自动注入使用ThreaPoolTaskExecutor
作为TaskExecutor